// Generated from ./src/grammar/GherkinLexer.g4 by ANTLR 4.9.0-SNAPSHOT


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class GherkinLexer extends Lexer {
	public static readonly FEATURE = 1;
	public static readonly SCENARIO = 2;
	public static readonly SCENARIO_OUTLINE = 3;
	public static readonly GIVEN = 4;
	public static readonly WHEN = 5;
	public static readonly THEN = 6;
	public static readonly AND = 7;
	public static readonly BUT = 8;
	public static readonly TEXT_CHARACTER = 9;
	public static readonly PIPE = 10;
	public static readonly DOC_STRING_QUOT = 11;
	public static readonly TAG = 12;
	public static readonly QUOTED_TEXT = 13;
	public static readonly ESCAPED_CHAR = 14;
	public static readonly COMMENT = 15;
	public static readonly MARKDOWN = 16;
	public static readonly ANGLE_BRACKET_PLACEHOLDER = 17;
	public static readonly WS = 18;
	public static readonly ANGLE_BRACKET_WORD = 19;
	public static readonly DOC_STRING_TEXT = 20;
	public static readonly DOC_STRING_MODE = 1;

	// tslint:disable:no-trailing-whitespace
	public static readonly channelNames: string[] = [
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	];

	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE", "DOC_STRING_MODE",
	];

	public static readonly ruleNames: string[] = [
		"FEATURE", "SCENARIO", "SCENARIO_OUTLINE", "GIVEN", "WHEN", "THEN", "AND", 
		"BUT", "TEXT_CHARACTER", "PIPE", "DOC_STRING_QUOT", "TAG", "QUOTED_TEXT", 
		"ESCAPED_CHAR", "COMMENT", "MARKDOWN", "ANGLE_BRACKET_PLACEHOLDER", "WS", 
		"ANGLE_BRACKET_WORD", "DOC_STRING_TEXT", "DOC_STRING_QUOT_2",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, "'Feature:'", "'Scenario:'", "'Scenario Outline:'", "'Given'", 
		"'When'", "'Then'", "'And'", "'But'", undefined, "'|'",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, "FEATURE", "SCENARIO", "SCENARIO_OUTLINE", "GIVEN", "WHEN", 
		"THEN", "AND", "BUT", "TEXT_CHARACTER", "PIPE", "DOC_STRING_QUOT", "TAG", 
		"QUOTED_TEXT", "ESCAPED_CHAR", "COMMENT", "MARKDOWN", "ANGLE_BRACKET_PLACEHOLDER", 
		"WS", "ANGLE_BRACKET_WORD", "DOC_STRING_TEXT",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(GherkinLexer._LITERAL_NAMES, GherkinLexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return GherkinLexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(GherkinLexer._ATN, this);
	}

	// @Override
	public get grammarFileName(): string { return "GherkinLexer.g4"; }

	// @Override
	public get ruleNames(): string[] { return GherkinLexer.ruleNames; }

	// @Override
	public get serializedATN(): string { return GherkinLexer._serializedATN; }

	// @Override
	public get channelNames(): string[] { return GherkinLexer.channelNames; }

	// @Override
	public get modeNames(): string[] { return GherkinLexer.modeNames; }

	public static readonly _serializedATN: string =
		"\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02\x16\xC9\b\x01" +
		"\b\x01\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06" +
		"\t\x06\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f" +
		"\x04\r\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04" +
		"\x12\t\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x03" +
		"\x02\x03\x02\x03\x02\x03\x02\x03\x02\x03\x02\x03\x02\x03\x02\x03\x02\x03" +
		"\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03" +
		"\x03\x03\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03" +
		"\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03" +
		"\x04\x03\x05\x03\x05\x03\x05\x03\x05\x03\x05\x03\x05\x03\x06\x03\x06\x03" +
		"\x06\x03\x06\x03\x06\x03\x07\x03\x07\x03\x07\x03\x07\x03\x07\x03\b\x03" +
		"\b\x03\b\x03\b\x03\t\x03\t\x03\t\x03\t\x03\n\x06\nm\n\n\r\n\x0E\nn\x03" +
		"\v\x03\v\x03\f\x03\f\x03\f\x03\f\x03\f\x03\f\x03\r\x03\r\x06\r{\n\r\r" +
		"\r\x0E\r|\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x07\x0E\x84\n\x0E\f" +
		"\x0E\x0E\x0E\x87\v\x0E\x03\x0E\x03\x0E\x03\x0F\x03\x0F\x03\x0F\x03\x10" +
		"\x03\x10\x07\x10\x90\n\x10\f\x10\x0E\x10\x93\v\x10\x03\x10\x03\x10\x03" +
		"\x11\x03\x11\x03\x11\x03\x11\x03\x11\x07\x11\x9C\n\x11\f\x11\x0E\x11\x9F" +
		"\v\x11\x03\x11\x03\x11\x03\x11\x03\x11\x03\x12\x03\x12\x07\x12\xA7\n\x12" +
		"\f\x12\x0E\x12\xAA\v\x12\x03\x12\x03\x12\x03\x13\x06\x13\xAF\n\x13\r\x13" +
		"\x0E\x13\xB0\x03\x13\x03\x13\x03\x14\x03\x14\x07\x14\xB7\n\x14\f\x14\x0E" +
		"\x14\xBA\v\x14\x03\x14\x03\x14\x03\x15\x06\x15\xBF\n\x15\r\x15\x0E\x15" +
		"\xC0\x03\x16\x03\x16\x03\x16\x03\x16\x03\x16\x03\x16\x03\x16\x05\x9D\xA8" +
		"\xC0\x02\x02\x17\x04\x02\x03\x06\x02\x04\b\x02\x05\n\x02\x06\f\x02\x07" +
		"\x0E\x02\b\x10\x02\t\x12\x02\n\x14\x02\v\x16\x02\f\x18\x02\r\x1A\x02\x0E" +
		"\x1C\x02\x0F\x1E\x02\x10 \x02\x11\"\x02\x12$\x02\x13&\x02\x14(\x02\x15" +
		"*\x02\x16,\x02\x02\x04\x02\x03\v\x07\x02/02<C\\aac|\x06\x022;C\\aac|\x05" +
		"\x02$$))bb\x06\x02$$))^^bb\x07\x02$$^^ppttvv\x04\x02\f\f\x0F\x0F\x05\x02" +
		"\v\f\x0F\x0F\"\"\x04\x02>>@@\x03\x02>>\x02\xD2\x02\x04\x03\x02\x02\x02" +
		"\x02\x06\x03\x02\x02\x02\x02\b\x03\x02\x02\x02\x02\n\x03\x02\x02\x02\x02" +
		"\f\x03\x02\x02\x02\x02\x0E\x03\x02\x02\x02\x02\x10\x03\x02\x02\x02\x02" +
		"\x12\x03\x02\x02\x02\x02\x14\x03\x02\x02\x02\x02\x16\x03\x02\x02\x02\x02" +
		"\x18\x03\x02\x02\x02\x02\x1A\x03\x02\x02\x02\x02\x1C\x03\x02\x02\x02\x02" +
		"\x1E\x03\x02\x02\x02\x02 \x03\x02\x02\x02\x02\"\x03\x02\x02\x02\x02$\x03" +
		"\x02\x02\x02\x02&\x03\x02\x02\x02\x03(\x03\x02\x02\x02\x03*\x03\x02\x02" +
		"\x02\x03,\x03\x02\x02\x02\x04.\x03\x02\x02\x02\x067\x03\x02\x02\x02\b" +
		"A\x03\x02\x02\x02\nS\x03\x02\x02\x02\fY\x03\x02\x02\x02\x0E^\x03\x02\x02" +
		"\x02\x10c\x03\x02\x02\x02\x12g\x03\x02\x02\x02\x14l\x03\x02\x02\x02\x16" +
		"p\x03\x02\x02\x02\x18r\x03\x02\x02\x02\x1Ax\x03\x02\x02\x02\x1C~\x03\x02" +
		"\x02\x02\x1E\x8A\x03\x02\x02\x02 \x8D\x03\x02\x02\x02\"\x96\x03\x02\x02" +
		"\x02$\xA4\x03\x02\x02\x02&\xAE\x03\x02\x02\x02(\xB4\x03\x02\x02\x02*\xBE" +
		"\x03\x02\x02\x02,\xC2\x03\x02\x02\x02./\x07H\x02\x02/0\x07g\x02\x0201" +
		"\x07c\x02\x0212\x07v\x02\x0223\x07w\x02\x0234\x07t\x02\x0245\x07g\x02" +
		"\x0256\x07<\x02\x026\x05\x03\x02\x02\x0278\x07U\x02\x0289\x07e\x02\x02" +
		"9:\x07g\x02\x02:;\x07p\x02\x02;<\x07c\x02\x02<=\x07t\x02\x02=>\x07k\x02" +
		"\x02>?\x07q\x02\x02?@\x07<\x02\x02@\x07\x03\x02\x02\x02AB\x07U\x02\x02" +
		"BC\x07e\x02\x02CD\x07g\x02\x02DE\x07p\x02\x02EF\x07c\x02\x02FG\x07t\x02" +
		"\x02GH\x07k\x02\x02HI\x07q\x02\x02IJ\x07\"\x02\x02JK\x07Q\x02\x02KL\x07" +
		"w\x02\x02LM\x07v\x02\x02MN\x07n\x02\x02NO\x07k\x02\x02OP\x07p\x02\x02" +
		"PQ\x07g\x02\x02QR\x07<\x02\x02R\t\x03\x02\x02\x02ST\x07I\x02\x02TU\x07" +
		"k\x02\x02UV\x07x\x02\x02VW\x07g\x02\x02WX\x07p\x02\x02X\v\x03\x02\x02" +
		"\x02YZ\x07Y\x02\x02Z[\x07j\x02\x02[\\\x07g\x02\x02\\]\x07p\x02\x02]\r" +
		"\x03\x02\x02\x02^_\x07V\x02\x02_`\x07j\x02\x02`a\x07g\x02\x02ab\x07p\x02" +
		"\x02b\x0F\x03\x02\x02\x02cd\x07C\x02\x02de\x07p\x02\x02ef\x07f\x02\x02" +
		"f\x11\x03\x02\x02\x02gh\x07D\x02\x02hi\x07w\x02\x02ij\x07v\x02\x02j\x13" +
		"\x03\x02\x02\x02km\t\x02\x02\x02lk\x03\x02\x02\x02mn\x03\x02\x02\x02n" +
		"l\x03\x02\x02\x02no\x03\x02\x02\x02o\x15\x03\x02\x02\x02pq\x07~\x02\x02" +
		"q\x17\x03\x02\x02\x02rs\x07$\x02\x02st\x07$\x02\x02tu\x07$\x02\x02uv\x03" +
		"\x02\x02\x02vw\b\f\x02\x02w\x19\x03\x02\x02\x02xz\x07B\x02\x02y{\t\x03" +
		"\x02\x02zy\x03\x02\x02\x02{|\x03\x02\x02\x02|z\x03\x02\x02\x02|}\x03\x02" +
		"\x02\x02}\x1B\x03\x02\x02\x02~\x85\t\x04\x02\x02\x7F\x84\n\x05\x02\x02" +
		"\x80\x84\x05\x1E\x0F\x02\x81\x82\x07^\x02\x02\x82\x84\v\x02\x02\x02\x83" +
		"\x7F\x03\x02\x02\x02\x83\x80\x03\x02\x02\x02\x83\x81\x03\x02\x02\x02\x84" +
		"\x87\x03\x02\x02\x02\x85\x83\x03\x02\x02\x02\x85\x86\x03\x02\x02\x02\x86" +
		"\x88\x03\x02\x02\x02\x87\x85\x03\x02\x02\x02\x88\x89\t\x04\x02\x02\x89" +
		"\x1D\x03\x02\x02\x02\x8A\x8B\x07^\x02\x02\x8B\x8C\t\x06\x02\x02\x8C\x1F" +
		"\x03\x02\x02\x02\x8D\x91\x07%\x02\x02\x8E\x90\n\x07\x02\x02\x8F\x8E\x03" +
		"\x02\x02\x02\x90\x93\x03\x02\x02\x02\x91\x8F\x03\x02\x02\x02\x91\x92\x03" +
		"\x02\x02\x02\x92\x94\x03\x02\x02\x02\x93\x91\x03\x02\x02\x02\x94\x95\b" +
		"\x10\x03\x02\x95!\x03\x02\x02\x02\x96\x97\x07b\x02\x02\x97\x98\x07b\x02" +
		"\x02\x98\x99\x07b\x02\x02\x99\x9D\x03\x02\x02\x02\x9A\x9C\v\x02\x02\x02" +
		"\x9B\x9A\x03\x02\x02\x02\x9C\x9F\x03\x02\x02\x02\x9D\x9E\x03\x02\x02\x02" +
		"\x9D\x9B\x03\x02\x02\x02\x9E\xA0\x03\x02\x02\x02\x9F\x9D\x03\x02\x02\x02" +
		"\xA0\xA1\x07b\x02\x02\xA1\xA2\x07b\x02\x02\xA2\xA3\x07b\x02\x02\xA3#\x03" +
		"\x02\x02\x02\xA4\xA8\x07>\x02\x02\xA5\xA7\v\x02\x02\x02\xA6\xA5\x03\x02" +
		"\x02\x02\xA7\xAA\x03\x02\x02\x02\xA8\xA9\x03\x02\x02\x02\xA8\xA6\x03\x02" +
		"\x02\x02\xA9\xAB\x03\x02\x02\x02\xAA\xA8\x03\x02\x02\x02\xAB\xAC\x07@" +
		"\x02\x02\xAC%\x03\x02\x02\x02\xAD\xAF\t\b\x02\x02\xAE\xAD\x03\x02\x02" +
		"\x02\xAF\xB0\x03\x02\x02\x02\xB0\xAE\x03\x02\x02\x02\xB0\xB1\x03\x02\x02" +
		"\x02\xB1\xB2\x03\x02\x02\x02\xB2\xB3\b\x13\x03\x02\xB3\'\x03\x02\x02\x02" +
		"\xB4\xB8\x07>\x02\x02\xB5\xB7\n\t\x02\x02\xB6\xB5\x03\x02\x02\x02\xB7" +
		"\xBA\x03\x02\x02\x02\xB8\xB6\x03\x02\x02\x02\xB8\xB9\x03\x02\x02\x02\xB9" +
		"\xBB\x03\x02\x02\x02\xBA\xB8\x03\x02\x02\x02\xBB\xBC\x07@\x02\x02\xBC" +
		")\x03\x02\x02\x02\xBD\xBF\n\n\x02\x02\xBE\xBD\x03\x02\x02\x02\xBF\xC0" +
		"\x03\x02\x02\x02\xC0\xC1\x03\x02\x02\x02\xC0\xBE\x03\x02\x02\x02\xC1+" +
		"\x03\x02\x02\x02\xC2\xC3\x07$\x02\x02\xC3\xC4\x07$\x02\x02\xC4\xC5\x07" +
		"$\x02\x02\xC5\xC6\x03\x02\x02\x02\xC6\xC7\b\x16\x04\x02\xC7\xC8\b\x16" +
		"\x05\x02\xC8-\x03\x02\x02\x02\x0E\x02\x03n|\x83\x85\x91\x9D\xA8\xB0\xB8" +
		"\xC0\x06\x07\x03\x02\b\x02\x02\t\r\x02\x06\x02\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!GherkinLexer.__ATN) {
			GherkinLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(GherkinLexer._serializedATN));
		}

		return GherkinLexer.__ATN;
	}

}

