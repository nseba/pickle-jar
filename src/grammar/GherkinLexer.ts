// @ts-nocheck
// Generated from ./src/grammar/GherkinLexer.g4 by ANTLR 4.9.0-SNAPSHOT


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class GherkinLexer extends Lexer {
	public static readonly FEATURE = 1;
	public static readonly SCENARIO = 2;
	public static readonly SCENARIO_OUTLINE = 3;
	public static readonly GIVEN = 4;
	public static readonly AND_GIVEN = 5;
	public static readonly WHEN = 6;
	public static readonly AND_WHEN = 7;
	public static readonly THEN = 8;
	public static readonly AND = 9;
	public static readonly BUT = 10;
	public static readonly EXAMPLES = 11;
	public static readonly BACKGROUND = 12;
	public static readonly PIPE = 13;
	public static readonly TAG = 14;
	public static readonly COMMENT = 15;
	public static readonly TEXT_CHARACTER = 16;
	public static readonly WS = 17;
	public static readonly WSS = 18;
	public static readonly DOC_STRING = 19;
	public static readonly TEXT_CHARACTER_MODE = 1;

	// tslint:disable:no-trailing-whitespace
	public static readonly channelNames: string[] = [
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	];

	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE", "TEXT_CHARACTER_MODE",
	];

	public static readonly ruleNames: string[] = [
		"FEATURE", "SCENARIO", "SCENARIO_OUTLINE", "GIVEN", "AND_GIVEN", "WHEN", 
		"AND_WHEN", "THEN", "AND", "BUT", "EXAMPLES", "BACKGROUND", "PIPE", "TAG", 
		"COMMENT", "TEXT_CHARACTER", "WS", "WSS", "DOC_STRING", "TEXT_CHARACTER2",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, "'|'",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, "FEATURE", "SCENARIO", "SCENARIO_OUTLINE", "GIVEN", "AND_GIVEN", 
		"WHEN", "AND_WHEN", "THEN", "AND", "BUT", "EXAMPLES", "BACKGROUND", "PIPE", 
		"TAG", "COMMENT", "TEXT_CHARACTER", "WS", "WSS", "DOC_STRING",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(GherkinLexer._LITERAL_NAMES, GherkinLexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return GherkinLexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(GherkinLexer._ATN, this);
	}

	// @Override
	public get grammarFileName(): string { return "GherkinLexer.g4"; }

	// @Override
	public get ruleNames(): string[] { return GherkinLexer.ruleNames; }

	// @Override
	public get serializedATN(): string { return GherkinLexer._serializedATN; }

	// @Override
	public get channelNames(): string[] { return GherkinLexer.channelNames; }

	// @Override
	public get modeNames(): string[] { return GherkinLexer.modeNames; }

	public static readonly _serializedATN: string =
		"\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02\x15\u013E\b\x01" +
		"\b\x01\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06" +
		"\t\x06\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f" +
		"\x04\r\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04" +
		"\x12\t\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x03\x02\x03\x02\x03" +
		"\x02\x03\x02\x03\x02\x03\x02\x03\x02\x03\x02\x03\x02\x03\x02\x03\x02\x03" +
		"\x02\x03\x02\x03\x02\x03\x02\x05\x02<\n\x02\x03\x03\x03\x03\x03\x03\x03" +
		"\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03" +
		"\x03\x03\x03\x03\x03\x03\x03\x03\x03\x05\x03O\n\x03\x03\x04\x03\x04\x03" +
		"\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03" +
		"\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03" +
		"\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03" +
		"\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03" +
		"\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03" +
		"\x04\x03\x04\x03\x04\x03\x04\x05\x04\x84\n\x04\x03\x05\x03\x05\x03\x05" +
		"\x03\x05\x03\x05\x03\x05\x03\x05\x03\x05\x03\x05\x03\x05\x05\x05\x90\n" +
		"\x05\x03\x06\x03\x06\x03\x06\x03\x06\x03\x06\x03\x06\x03\x06\x03\x06\x03" +
		"\x06\x03\x06\x03\x06\x03\x06\x03\x06\x03\x06\x03\x06\x03\x06\x03\x06\x03" +
		"\x06\x05\x06\xA4\n\x06\x03\x07\x03\x07\x03\x07\x03\x07\x03\x07\x03\x07" +
		"\x03\x07\x03\x07\x05\x07\xAE\n\x07\x03\b\x03\b\x03\b\x03\b\x03\b\x03\b" +
		"\x03\b\x03\b\x03\b\x03\b\x03\b\x03\b\x03\b\x03\b\x03\b\x03\b\x05\b\xC0" +
		"\n\b\x03\t\x03\t\x03\t\x03\t\x03\t\x03\t\x03\t\x03\t\x05\t\xCA\n\t\x03" +
		"\n\x03\n\x03\n\x03\n\x03\n\x03\n\x05\n\xD2\n\n\x03\v\x03\v\x03\v\x03\v" +
		"\x03\v\x03\v\x05\v\xDA\n\v\x03\f\x03\f\x03\f\x03\f\x03\f\x03\f\x03\f\x03" +
		"\f\x03\f\x03\f\x03\f\x03\f\x03\f\x03\f\x03\f\x03\f\x03\f\x05\f\xED\n\f" +
		"\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03" +
		"\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x05\r\u0104\n" +
		"\r\x03\x0E\x03\x0E\x03\x0F\x03\x0F\x06\x0F\u010A\n\x0F\r\x0F\x0E\x0F\u010B" +
		"\x03\x10\x03\x10\x07\x10\u0110\n\x10\f\x10\x0E\x10\u0113\v\x10\x03\x10" +
		"\x03\x10\x03\x11\x03\x11\x03\x11\x03\x11\x03\x12\x06\x12\u011C\n\x12\r" +
		"\x12\x0E\x12\u011D\x03\x12\x03\x12\x03\x13\x06\x13\u0123\n\x13\r\x13\x0E" +
		"\x13\u0124\x03\x13\x03\x13\x03\x14\x03\x14\x03\x14\x03\x14\x03\x14\x07" +
		"\x14\u012E\n\x14\f\x14\x0E\x14\u0131\v\x14\x03\x14\x03\x14\x03\x14\x03" +
		"\x14\x03\x15\x06\x15\u0138\n\x15\r\x15\x0E\x15\u0139\x03\x15\x03\x15\x03" +
		"\x15\x03\u012F\x02\x02\x16\x04\x02\x03\x06\x02\x04\b\x02\x05\n\x02\x06" +
		"\f\x02\x07\x0E\x02\b\x10\x02\t\x12\x02\n\x14\x02\v\x16\x02\f\x18\x02\r" +
		"\x1A\x02\x0E\x1C\x02\x0F\x1E\x02\x10 \x02\x11\"\x02\x12$\x02\x13&\x02" +
		"\x14(\x02\x15*\x02\x02\x04\x02\x03\x06\x06\x022;C\\aac|\x04\x02\f\f\x0F" +
		"\x0F\x05\x02\f\f\x0F\x0F~~\x05\x02\v\f\x0F\x0F\"\"\x02\u014F\x02\x04\x03" +
		"\x02\x02\x02\x02\x06\x03\x02\x02\x02\x02\b\x03\x02\x02\x02\x02\n\x03\x02" +
		"\x02\x02\x02\f\x03\x02\x02\x02\x02\x0E\x03\x02\x02\x02\x02\x10\x03\x02" +
		"\x02\x02\x02\x12\x03\x02\x02\x02\x02\x14\x03\x02\x02\x02\x02\x16\x03\x02" +
		"\x02\x02\x02\x18\x03\x02\x02\x02\x02\x1A\x03\x02\x02\x02\x02\x1C\x03\x02" +
		"\x02\x02\x02\x1E\x03\x02\x02\x02\x02 \x03\x02\x02\x02\x02\"\x03\x02\x02" +
		"\x02\x02$\x03\x02\x02\x02\x02&\x03\x02\x02\x02\x02(\x03\x02\x02\x02\x03" +
		"*\x03\x02\x02\x02\x04;\x03\x02\x02\x02\x06N\x03\x02\x02\x02\b\x83\x03" +
		"\x02\x02\x02\n\x8F\x03\x02\x02\x02\f\xA3\x03\x02\x02\x02\x0E\xAD\x03\x02" +
		"\x02\x02\x10\xBF\x03\x02\x02\x02\x12\xC9\x03\x02\x02\x02\x14\xD1\x03\x02" +
		"\x02\x02\x16\xD9\x03\x02\x02\x02\x18\xEC\x03\x02\x02\x02\x1A\u0103\x03" +
		"\x02\x02\x02\x1C\u0105\x03\x02\x02\x02\x1E\u0107\x03\x02\x02\x02 \u010D" +
		"\x03\x02\x02\x02\"\u0116\x03\x02\x02\x02$\u011B\x03\x02\x02\x02&\u0122" +
		"\x03\x02\x02\x02(\u0128\x03\x02\x02\x02*\u0137\x03\x02\x02\x02,-\x07H" +
		"\x02\x02-.\x07g\x02\x02./\x07c\x02\x02/0\x07v\x02\x0201\x07w\x02\x021" +
		"2\x07t\x02\x0223\x07g\x02\x023<\x07<\x02\x0245\x07H\x02\x0256\x07G\x02" +
		"\x0267\x07C\x02\x0278\x07V\x02\x0289\x07W\x02\x029:\x07T\x02\x02:<\x07" +
		"G\x02\x02;,\x03\x02\x02\x02;4\x03\x02\x02\x02<\x05\x03\x02\x02\x02=>\x07" +
		"U\x02\x02>?\x07e\x02\x02?@\x07g\x02\x02@A\x07p\x02\x02AB\x07c\x02\x02" +
		"BC\x07t\x02\x02CD\x07k\x02\x02DE\x07q\x02\x02EO\x07<\x02\x02FG\x07U\x02" +
		"\x02GH\x07E\x02\x02HI\x07G\x02\x02IJ\x07P\x02\x02JK\x07C\x02\x02KL\x07" +
		"T\x02\x02LM\x07K\x02\x02MO\x07Q\x02\x02N=\x03\x02\x02\x02NF\x03\x02\x02" +
		"\x02O\x07\x03\x02\x02\x02PQ\x07U\x02\x02QR\x07e\x02\x02RS\x07g\x02\x02" +
		"ST\x07p\x02\x02TU\x07c\x02\x02UV\x07t\x02\x02VW\x07k\x02\x02WX\x07q\x02" +
		"\x02XY\x07\"\x02\x02YZ\x07Q\x02\x02Z[\x07w\x02\x02[\\\x07v\x02\x02\\]" +
		"\x07n\x02\x02]^\x07k\x02\x02^_\x07p\x02\x02_`\x07g\x02\x02`\x84\x07<\x02" +
		"\x02ab\x07U\x02\x02bc\x07E\x02\x02cd\x07G\x02\x02de\x07P\x02\x02ef\x07" +
		"C\x02\x02fg\x07T\x02\x02gh\x07K\x02\x02hi\x07Q\x02\x02ij\x07a\x02\x02" +
		"jk\x07Q\x02\x02kl\x07W\x02\x02lm\x07V\x02\x02mn\x07N\x02\x02no\x07K\x02" +
		"\x02op\x07P\x02\x02p\x84\x07G\x02\x02qr\x07U\x02\x02rs\x07e\x02\x02st" +
		"\x07g\x02\x02tu\x07p\x02\x02uv\x07c\x02\x02vw\x07t\x02\x02wx\x07k\x02" +
		"\x02xy\x07q\x02\x02yz\x07\"\x02\x02z{\x07V\x02\x02{|\x07g\x02\x02|}\x07" +
		"o\x02\x02}~\x07r\x02\x02~\x7F\x07n\x02\x02\x7F\x80\x07c\x02\x02\x80\x81" +
		"\x07v\x02\x02\x81\x82\x07g\x02\x02\x82\x84\x07<\x02\x02\x83P\x03\x02\x02" +
		"\x02\x83a\x03\x02\x02\x02\x83q\x03\x02\x02\x02\x84\t\x03\x02\x02\x02\x85" +
		"\x86\x07I\x02\x02\x86\x87\x07k\x02\x02\x87\x88\x07x\x02\x02\x88\x89\x07" +
		"g\x02\x02\x89\x90\x07p\x02\x02\x8A\x8B\x07I\x02\x02\x8B\x8C\x07K\x02\x02" +
		"\x8C\x8D\x07X\x02\x02\x8D\x8E\x07G\x02\x02\x8E\x90\x07P\x02\x02\x8F\x85" +
		"\x03\x02\x02\x02\x8F\x8A\x03\x02\x02\x02\x90\v\x03\x02\x02\x02\x91\x92" +
		"\x07C\x02\x02\x92\x93\x07p\x02\x02\x93\x94\x07f\x02\x02\x94\x95\x07\"" +
		"\x02\x02\x95\x96\x07i\x02\x02\x96\x97\x07k\x02\x02\x97\x98\x07x\x02\x02" +
		"\x98\x99\x07g\x02\x02\x99\xA4\x07p\x02\x02\x9A\x9B\x07C\x02\x02\x9B\x9C" +
		"\x07P\x02\x02\x9C\x9D\x07F\x02\x02\x9D\x9E\x07a\x02\x02\x9E\x9F\x07I\x02" +
		"\x02\x9F\xA0\x07K\x02\x02\xA0\xA1\x07X\x02\x02\xA1\xA2\x07G\x02\x02\xA2" +
		"\xA4\x07P\x02\x02\xA3\x91\x03\x02\x02\x02\xA3\x9A\x03\x02\x02\x02\xA4" +
		"\r\x03\x02\x02\x02\xA5\xA6\x07Y\x02\x02\xA6\xA7\x07j\x02\x02\xA7\xA8\x07" +
		"g\x02\x02\xA8\xAE\x07p\x02\x02\xA9\xAA\x07Y\x02\x02\xAA\xAB\x07J\x02\x02" +
		"\xAB\xAC\x07G\x02\x02\xAC\xAE\x07P\x02\x02\xAD\xA5\x03\x02\x02\x02\xAD" +
		"\xA9\x03\x02\x02\x02\xAE\x0F\x03\x02\x02\x02\xAF\xB0\x07C\x02\x02\xB0" +
		"\xB1\x07p\x02\x02\xB1\xB2\x07f\x02\x02\xB2\xB3\x07\"\x02\x02\xB3\xB4\x07" +
		"y\x02\x02\xB4\xB5\x07j\x02\x02\xB5\xB6\x07g\x02\x02\xB6\xC0\x07p\x02\x02" +
		"\xB7\xB8\x07C\x02\x02\xB8\xB9\x07P\x02\x02\xB9\xBA\x07F\x02\x02\xBA\xBB" +
		"\x07a\x02\x02\xBB\xBC\x07Y\x02\x02\xBC\xBD\x07J\x02\x02\xBD\xBE\x07G\x02" +
		"\x02\xBE\xC0\x07P\x02\x02\xBF\xAF\x03\x02\x02\x02\xBF\xB7\x03\x02\x02" +
		"\x02\xC0\x11\x03\x02\x02\x02\xC1\xC2\x07V\x02\x02\xC2\xC3\x07j\x02\x02" +
		"\xC3\xC4\x07g\x02\x02\xC4\xCA\x07p\x02\x02\xC5\xC6\x07V\x02\x02\xC6\xC7" +
		"\x07J\x02\x02\xC7\xC8\x07G\x02\x02\xC8\xCA\x07P\x02\x02\xC9\xC1\x03\x02" +
		"\x02\x02\xC9\xC5\x03\x02\x02\x02\xCA\x13\x03\x02\x02\x02\xCB\xCC\x07C" +
		"\x02\x02\xCC\xCD\x07p\x02\x02\xCD\xD2\x07f\x02\x02\xCE\xCF\x07C\x02\x02" +
		"\xCF\xD0\x07P\x02\x02\xD0\xD2\x07F\x02\x02\xD1\xCB\x03\x02\x02\x02\xD1" +
		"\xCE\x03\x02\x02\x02\xD2\x15\x03\x02\x02\x02\xD3\xD4\x07D\x02\x02\xD4" +
		"\xD5\x07w\x02\x02\xD5\xDA\x07v\x02\x02\xD6\xD7\x07D\x02\x02\xD7\xD8\x07" +
		"W\x02\x02\xD8\xDA\x07V\x02\x02\xD9\xD3\x03\x02\x02\x02\xD9\xD6\x03\x02" +
		"\x02\x02\xDA\x17\x03\x02\x02\x02\xDB\xDC\x07G\x02\x02\xDC\xDD\x07z\x02" +
		"\x02\xDD\xDE\x07c\x02\x02\xDE\xDF\x07o\x02\x02\xDF\xE0\x07r\x02\x02\xE0" +
		"\xE1\x07n\x02\x02\xE1\xE2\x07g\x02\x02\xE2\xE3\x07u\x02\x02\xE3\xED\x07" +
		"<\x02\x02\xE4\xE5\x07G\x02\x02\xE5\xE6\x07Z\x02\x02\xE6\xE7\x07C\x02\x02" +
		"\xE7\xE8\x07O\x02\x02\xE8\xE9\x07R\x02\x02\xE9\xEA\x07N\x02\x02\xEA\xEB" +
		"\x07G\x02\x02\xEB\xED\x07U\x02\x02\xEC\xDB\x03\x02\x02\x02\xEC\xE4\x03" +
		"\x02\x02\x02\xED\x19\x03\x02\x02\x02\xEE\xEF\x07D\x02\x02\xEF\xF0\x07" +
		"c\x02\x02\xF0\xF1\x07e\x02\x02\xF1\xF2\x07m\x02\x02\xF2\xF3\x07i\x02\x02" +
		"\xF3\xF4\x07t\x02\x02\xF4\xF5\x07q\x02\x02\xF5\xF6\x07w\x02\x02\xF6\xF7" +
		"\x07p\x02\x02\xF7\xF8\x07f\x02\x02\xF8\u0104\x07<\x02\x02\xF9\xFA\x07" +
		"D\x02\x02\xFA\xFB\x07C\x02\x02\xFB\xFC\x07E\x02\x02\xFC\xFD\x07M\x02\x02" +
		"\xFD\xFE\x07I\x02\x02\xFE\xFF\x07T\x02\x02\xFF\u0100\x07Q\x02\x02\u0100" +
		"\u0101\x07W\x02\x02\u0101\u0102\x07P\x02\x02\u0102\u0104\x07F\x02\x02" +
		"\u0103\xEE\x03\x02\x02\x02\u0103\xF9\x03\x02\x02\x02\u0104\x1B\x03\x02" +
		"\x02\x02\u0105\u0106\x07~\x02\x02\u0106\x1D\x03\x02\x02\x02\u0107\u0109" +
		"\x07B\x02\x02\u0108\u010A\t\x02\x02\x02\u0109\u0108\x03\x02\x02\x02\u010A" +
		"\u010B\x03\x02\x02\x02\u010B\u0109\x03\x02\x02\x02\u010B\u010C\x03\x02" +
		"\x02\x02\u010C\x1F\x03\x02\x02\x02\u010D\u0111\x07%\x02\x02\u010E\u0110" +
		"\n\x03\x02\x02\u010F\u010E\x03\x02\x02\x02\u0110\u0113\x03\x02\x02\x02" +
		"\u0111\u010F\x03\x02\x02\x02\u0111\u0112\x03\x02\x02\x02\u0112\u0114\x03" +
		"\x02\x02\x02\u0113\u0111\x03\x02\x02\x02\u0114\u0115\b\x10\x02\x02\u0115" +
		"!\x03\x02\x02\x02\u0116\u0117\n\x04\x02\x02\u0117\u0118\x03\x02\x02\x02" +
		"\u0118\u0119\b\x11\x03\x02\u0119#\x03\x02\x02\x02\u011A\u011C\t\x03\x02" +
		"\x02\u011B\u011A\x03\x02\x02\x02\u011C\u011D\x03\x02\x02\x02\u011D\u011B" +
		"\x03\x02\x02\x02\u011D\u011E\x03\x02\x02\x02\u011E\u011F\x03\x02\x02\x02" +
		"\u011F\u0120\b\x12\x02\x02\u0120%\x03\x02\x02\x02\u0121\u0123\t\x05\x02" +
		"\x02\u0122\u0121\x03\x02\x02\x02\u0123\u0124\x03\x02\x02\x02\u0124\u0122" +
		"\x03\x02\x02\x02\u0124\u0125\x03\x02\x02\x02\u0125\u0126\x03\x02\x02\x02" +
		"\u0126\u0127\b\x13\x02\x02\u0127\'\x03\x02\x02\x02\u0128\u0129\x07$\x02" +
		"\x02\u0129\u012A\x07$\x02\x02\u012A\u012B\x07$\x02\x02\u012B\u012F\x03" +
		"\x02\x02\x02\u012C\u012E\v\x02\x02\x02\u012D\u012C\x03\x02\x02\x02\u012E" +
		"\u0131\x03\x02\x02\x02\u012F\u0130\x03\x02\x02\x02\u012F\u012D\x03\x02" +
		"\x02\x02\u0130\u0132\x03\x02\x02\x02\u0131\u012F\x03\x02\x02\x02\u0132" +
		"\u0133\x07$\x02\x02\u0133\u0134\x07$\x02\x02\u0134\u0135\x07$\x02\x02" +
		"\u0135)\x03\x02\x02\x02\u0136\u0138\n\x04\x02\x02\u0137\u0136\x03\x02" +
		"\x02\x02\u0138\u0139\x03\x02\x02\x02\u0139\u0137\x03\x02\x02\x02\u0139" +
		"\u013A\x03\x02\x02\x02\u013A\u013B\x03\x02\x02\x02\u013B\u013C\b\x15\x04" +
		"\x02\u013C\u013D\b\x15\x05\x02\u013D+\x03\x02\x02\x02\x16\x02\x03;N\x83" +
		"\x8F\xA3\xAD\xBF\xC9\xD1\xD9\xEC\u0103\u010B\u0111\u011D\u0124\u012F\u0139" +
		"\x06\b\x02\x02\x07\x03\x02\t\x12\x02\x06\x02\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!GherkinLexer.__ATN) {
			GherkinLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(GherkinLexer._serializedATN));
		}

		return GherkinLexer.__ATN;
	}

}

